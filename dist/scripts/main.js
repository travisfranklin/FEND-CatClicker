"use strict";function _slicedToArray(t,r){return _arrayWithHoles(t)||_iterableToArrayLimit(t,r)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(t,r){var o=[],a=!0,e=!1,n=void 0;try{for(var i,l=t[Symbol.iterator]();!(a=(i=l.next()).done)&&(o.push(i.value),!r||o.length!==r);a=!0);}catch(t){e=!0,n=t}finally{try{a||null==l.return||l.return()}finally{if(e)throw n}}return o}function _arrayWithHoles(t){if(Array.isArray(t))return t}function Kitty(t){this.name=t,this.clickCount=0}function renderCat(){var t=!0,r=!1,o=void 0;try{for(var a,e=playPen[Symbol.iterator]();!(t=(a=e.next()).done);t=!0){var n=a.value;$('\n      <li>\n          <div class="cat-unit">\n            <div class="cat cat_type18">\n              <div id="'.concat(n.name,'" class="cat__previewbox">\n                <p class="title">').concat(n.name,'</p>\n                <img src="').concat(n.photo,'" class="cat__preview" alt="photo of ').concat(n.name,' the cat">\n                <p class="count"><span class="').concat(n.name,'clicked">0</span> clicks</p>\n              </div>\n            </div>\n          </div>\n        </li>\n    ')).appendTo(".catListContainer")}}catch(t){r=!0,o=t}finally{try{t||null==e.return||e.return()}finally{if(r)throw o}}}var cats=["kiki","buckaroo","lelouche","laHire","cheeky","whiskers","bulgaria","mr_Rogers","dog","bucko","marilyn","indy"],playPen=[],_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _step2,_loop=function(){var t=_slicedToArray(_step2.value,2),r=(t[0],t[1]);Kitty.prototype.update=function(){this.name=r},(r=new Kitty(r)).photo="https://loremflickr.com/200/200/kitten,sleeping/all/?lock=".concat(Math.floor(Math.random()*Math.floor(100))),playPen.push(r)},_iterator2=cats.entries()[Symbol.iterator]();!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0)_loop()}catch(t){_didIteratorError2=!0,_iteratorError2=t}finally{try{_iteratorNormalCompletion2||null==_iterator2.return||_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}renderCat(),playPen.forEach(function(t){$("#".concat(t.name)).click(function(){t.clickCount++,$(".".concat(t.name,"clicked")).text(t.clickCount)})});